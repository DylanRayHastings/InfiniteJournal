# pytest.ini - Pytest configuration

[tool:pytest]
# Minimum version
minversion = 7.0

# Test discovery patterns
python_files = test_*.py *_test.py
python_classes = Test* *Tests
python_functions = test_*

# Test paths
testpaths = 
    tests
    src/infinitejournal

# Add src to Python path
pythonpath = src

# Command line options
addopts = 
    # Reporting options
    -ra
    --strict-markers
    --strict-config
    --tb=short
    --verbosity=2
    
    # Coverage options
    --cov=infinitejournal
    --cov-branch
    --cov-report=term-missing:skip-covered
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-config=.coveragerc
    --no-cov-on-fail
    
    # Performance options
    --durations=10
    --durations-min=0.1
    
    # Parallel execution (disabled by default, use -n auto to enable)
    # -n auto
    
    # Show local variables in tracebacks
    --showlocals
    
    # Fail on warnings
    --strict
    
    # Capture output
    --capture=no
    -s

# Console output
console_output_style = progress

# Logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] [%(name)s] %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

log_file = tests/pytest.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] [%(name)s] %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S

# Test markers
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    gui: marks tests that require GUI/display
    opengl: marks tests that require OpenGL context
    benchmark: marks performance benchmark tests
    network: marks tests that require network access
    smoke: marks smoke tests for quick validation
    regression: marks regression tests
    wip: marks work-in-progress tests
    skipif_no_display: skips tests if no display is available
    requires_gpu: marks tests that require GPU
    flaky: marks tests that are flaky and might need retries

# Warnings
filterwarnings =
    # Treat warnings as errors by default
    error
    
    # Ignore specific warnings
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    
    # Pygame warnings
    ignore::DeprecationWarning:pygame
    
    # NumPy warnings
    ignore::DeprecationWarning:numpy
    
    # OpenGL warnings
    ignore::DeprecationWarning:OpenGL

# Doctest options
doctest_optionflags = 
    NORMALIZE_WHITESPACE
    ELLIPSIS
    IGNORE_EXCEPTION_DETAIL

# Timeout for tests (seconds)
timeout = 300
timeout_method = thread

# Assertions
enable_assertion_pass_hook = true

# Cache directory
cache_dir = .pytest_cache

# JUnit XML output (for CI)
junit_family = xunit2
junit_suite_name = InfiniteJournal Test Suite
junit_logging = all
junit_log_passing_tests = true
junit_duration_report = total

# Coverage thresholds
[coverage:run]
source = src
omit =
    */tests/*
    */test_*.py
    */__main__.py
    */conftest.py

[coverage:report]
fail_under = 80
precision = 2
show_missing = true
skip_covered = false

# Pytest plugins configuration
[pytest-mock]
mock_use_standalone_module = true

[pytest-timeout]
timeout = 300
timeout_method = thread
timeout_func_only = false

[pytest-xdist]
looponfail = false
numprocesses = auto

# Custom pytest options
[pytest:ini]
# Environment variables for tests
env = 
    INFINITEJOURNAL_ENV=test
    INFINITEJOURNAL_DEBUG=true
    INFINITEJOURNAL_LOG_LEVEL=DEBUG